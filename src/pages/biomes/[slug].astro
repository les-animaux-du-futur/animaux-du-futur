---
import BaseLayout from "../../layouts/BaseLayout.astro";
import Hero from "../../components/Hero.astro";
import { getBiomes, getSpecies } from "../../functions";

export function getStaticPaths() {
  const { biomes } = getBiomes();
  return biomes.map(({url}, index) => {
    if (!url) {
      return { params: {
        slug: 's'
      }}
    }
    return {
      params: { slug: url },
    };
  });
}

const { biomesBySlug } = getBiomes();
const { species } = getSpecies();



const { slug } = Astro.params;



const biome = biomesBySlug[slug];


const {
  name,
  biomesImage,
  heroDescription,
  description,
  climat,
  temperatureMin,
  temperatureMax,
  speciesNumber,
} = biome ?? {}

let presentSpecies;
if (name) {
  presentSpecies = species.filter((specie) => specie.biome === name)

}


---

{name && <BaseLayout>
    <Hero title={name} imgUrl={`/${biomesImage}`} text={heroDescription}/>
    <section class="container">
        <div class="container-infos">
            <div class="container-description">
                <h2>Description</h2>
                <p class="description">{description}</p>
            </div>
            <div class="container-caracteristiques">
                <h2 class="caracteristiques">Caractéristiques</h2>
                <div class="content-caracteristiques">
                    <div class="img-text">
                        <img src="/assets/images/Temperature.svg" alt="image">
                        <div class="infos">
                            <p>Climat:</p>
                            <p class="climat">{climat}</p>
                        </div>
                    </div>
                    <div class="img-text">
                        <img src="/assets/images/Thermometer.svg" alt="image">
                        <div>
                            <p>Température:</p>
                            <div class="temperatures">
                                <div class="content-temp">
                                    <p class="temp-min">{temperatureMin}</p>
                                    <span>min</span>
                                </div>
                                <div class="content-temp">
                                    <p class="temp-max">{temperatureMax}</p>
                                    <span>max</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="img-text">
                        <img src="/assets/images/Bear.svg" alt="image">
                            <div>
                                <p>Présence animale:</p>
                                <p class="animaux">{speciesNumber}</p>
                            </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="container-species">
            <h2>Espèces présentes</h2>
            <div class="grid-species">
              {presentSpecies?.map((specie) => (
                <a href={`/species/${Number(specie.id) -1}`}>
                  <img src={`/${specie.speciesImage}`} alt="Image animal">
                </a>
              ))
              }

            </div>
            <a class="button" href="/">
                Découvrir le bestiaire
                <img class="img_btn" src="/assets/images/Arrow3.svg" alt="arrow"/>
            </a>
        </div>
    </section>
</BaseLayout>}



<style lang="scss">
    .container {
        display: flex;
        flex-direction: column;
        margin-top: 6rem;
        gap: 6rem;
        @media screen and (max-width: 768px) {
        margin-top: 2.5rem;
        gap: 2.5rem;
        }
        h2, h4, p {
            margin: 0;
        }
        .container-infos {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            grid-column-gap: 6rem;
            @media screen and (max-width: 768px) {
                grid-template-columns: 1fr;
                grid-row-gap: 2.5rem;
            }
            .container-description {
                display: flex;
                flex-direction: column;
                gap: 2rem;
            }
            .container-caracteristiques {
                display: flex;
                flex-direction: column;
                gap: 2rem;
                .content-caracteristiques {
                    display: grid;
                    grid-template-columns: repeat(2, 1fr);
                    grid-row-gap: 1rem;
                    @media screen and (max-width: 400px) {
                        grid-template-columns: 1fr;
                    }
                    .img-text {
                        display: flex;
                        gap: 2rem;
                        p {
                            white-space: nowrap;
                        }
                        img {
                            width: 2.5rem;
                            height: 2.5rem;
                        }
                        .temperatures {
                            display: flex;
                            gap: 0.5rem;
                            .content-temp {
                                display: flex;
                                align-items: flex-end;
                                gap: 0.2rem;
                            }
                        }
                    }
                }
            }
        }
        .container-species {
            display: flex;
            flex-direction: column;
            gap: 2rem;
            .grid-species {
                display: flex;
                gap: 1.25rem;
                overflow-x: scroll;
                overflow-y: hidden;
                padding-bottom: 0.25rem;
                a {
                    height: auto;
                    img {
                        width: 6rem;
                        height: 100%;
                        object-fit: cover;
                    }
                }
            }
            .button{
                width: fit-content;
                white-space: nowrap;
                display: flex;
                justify-content: center;
                align-items: center;
                text-decoration: none;
                padding: 16px 32px;
                font-weight: 700;
                color: #E1F6FF;
                border-radius: 8px;
                border: 2px solid #E1F6FF;
                background: rgba(19, 21, 21, 0.30);
                backdrop-filter: blur(10px);
                cursor: pointer;
                transition: 0.2s;
                &:hover{
                    transition: 0.2s;
                    color: #131515;
                    background: #E1F6FF;
                    transition: 0.2s;
                    .img_btn{
                        filter: invert(1);
                    }
                }
                .img_btn{
                    width: 25px;
                    height: 20px;
                    margin-left: 8px;
                }
            }
        }
    }
</style>
