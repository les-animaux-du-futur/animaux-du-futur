---
import ButtonOutLine from '../atoms/ButtonOutLine.astro';


interface Props {
  btn?: {text: string, link: string, withArrow?:boolean};
  title: string;
  texts: string[];
  imgUrl: string
  reverse?: boolean
}

const {title, texts, imgUrl, reverse, btn} = Astro.props
---


<div class={`inlineContainer ${reverse ? 'reverse contaierSpaceRight' : 'contaierSpaceLeft'}`}>
  <div class="texts">
    <h2>{title}</h2>
    {texts.map((text: string) => <p set:html={text}/>)}
    {btn && <ButtonOutLine href={btn.link} withArrow={btn.withArrow}>{btn.text}</ButtonOutLine>}
  </div>
  <div class="img">
    <img src={imgUrl} alt="">
  </div>
</div>




<style lang="scss">
  .inlineContainer {
    display: flex;
    align-items: center;
    gap: 4rem;
    margin: 4rem 0 4rem 0;
    flex-direction: column;
    @media (min-width: 700px){
      flex-direction: row;
    }
    &.reverse {
      flex-direction: column-reverse;
      margin: 4rem 0 4rem 0;
      @media (min-width: 700px){
        flex-direction: row-reverse;
      }
    }
  }

  .texts {
    p {
      margin: 1.6rem 0;
    }
    h2{
      text-transform: uppercase;
      font-weight: bold;
    }
  }
  .img {
    min-width: 40%;
    overflow: hidden;

    // @media (min-width: 600px){
    //   min-width: 24%;
    // }

    // @media (min-width: 1300px){
    //   min-width: 29%;
    // }
    // @media (min-width: 1700px){
    //   min-width: 20%;
    // }
  }
  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

</style>
